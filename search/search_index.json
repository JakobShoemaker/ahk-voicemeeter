{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AHK Voicemeeter","text":"<p>AHK Voicemeeter is a library to enable controlling Voicemeeter through Autohotkey.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Download the latest release from GitHub Releases.</p> <p>Place <code>Voicemeeter.ahk</code> in the local library folder of your AutoHotkey script.</p> <p>In your script, add the line: <code>#Include &lt;Voicemeeter&gt;</code>. Next create a new <code>Voicemeeter</code> instance by calling <code>Voicemeeter()</code> to establish a connection to the program. All that's left is to write your script logic, hotkeys, macros, et cetera.</p>"},{"location":"#example-script","title":"Example Script","text":"Folder Structure<pre><code>MyAwesomeScript\n\u251c\u2500\u2500 Lib\n\u2502   \u2514\u2500\u2500 Voicemeeter.ahk\n\u251c\u2500\u2500 MyAwesomeScript.ahk\n\u2514\u2500\u2500 MyOtherCoolScript.ahk\n</code></pre> MyAwesomeScript.ahk<pre><code>#Requires AutoHotkey v2.0\n\n; Set SingleInstance to make sure only one instance of the script can run at a time.\n#SingleInstance Force\n\n; Include the Voicemeeter library.\n#Include &lt;Voicemeeter&gt;\n\n; Create the Voicemeeter instance.\nvmr := Voicemeeter()\n\n; Increase or decrease the gain of Strip[2] by 1 when the volume up or down keys are pressed.\nVolume_Up::vmr.SetParameters(\"Strip[2].Gain+=1.0\")\nVolume_Down::vmr.SetParameters(\"Strip[2].Gain-=1.0\")\n\n; When the volume mute key is pressed, get the current mute state of Strip[2] and set it to the opposite.\nVolume_Mute::vmr.SetParameterFloat(\"Strip[2].Mute\", !vmr.GetParameterFloat(\"Strip[2].Mute\"))\n</code></pre>"},{"location":"api-reference/voicemeeter/","title":"Voicemeeter","text":"<p>The Voicemeeter Remote interface.</p>"},{"location":"api-reference/voicemeeter/#fields","title":"Fields","text":""},{"location":"api-reference/voicemeeter/#windowclass","title":"WindowClass","text":"<p>The window class of the Voicemeeter main window. This is intended to be used with AutoHotkey window functions.</p>"},{"location":"api-reference/voicemeeter/#type-string","title":"Type: String","text":""},{"location":"api-reference/voicemeeter/#static-methods","title":"Static Methods","text":""},{"location":"api-reference/voicemeeter/#call","title":"Call","text":"<p>Constructs a new Voicemeeter instance. This loads the Voicemeeter Remote DLL and logs in to the server.</p>"},{"location":"api-reference/voicemeeter/#syntax","title":"Syntax","text":"<pre><code>Vmr := Voicemeeter()\n</code></pre> <pre><code>Vmr := Voicemeeter.Call()\n</code></pre>"},{"location":"api-reference/voicemeeter/#methods","title":"Methods","text":""},{"location":"api-reference/voicemeeter/#buildparamstring","title":"BuildParamString","text":"<p>Builds a string containing a script from a list of strings containing script statements for SetParameters.</p>"},{"location":"api-reference/voicemeeter/#syntax_1","title":"Syntax","text":"<pre><code>ParamString := Vmr.BuildParamString(Value1 [, Value2, ..., ValueN])\n</code></pre>"},{"location":"api-reference/voicemeeter/#parameters","title":"Parameters","text":"<code>Value</code>: String <p>A string containing a script for SetParameters.</p>"},{"location":"api-reference/voicemeeter/#returns-string","title":"Returns: String","text":"<p>A string containing each of the provided scripts.</p>"},{"location":"api-reference/voicemeeter/#getparameterfloat","title":"GetParameterFloat","text":"<p>Get a parameter value as a floating point number.</p>"},{"location":"api-reference/voicemeeter/#syntax_2","title":"Syntax","text":"<pre><code>Value := Vmr.GetParameterFloat(ParamName)\n</code></pre>"},{"location":"api-reference/voicemeeter/#parameters_1","title":"Parameters","text":"<code>ParamName</code>: String <p>The name of the parameter.</p>"},{"location":"api-reference/voicemeeter/#returns-float","title":"Returns: Float","text":"<p>The value of the parameter.</p>"},{"location":"api-reference/voicemeeter/#getparameterstring","title":"GetParameterString","text":"<p>Get a parameter value as a string.</p>"},{"location":"api-reference/voicemeeter/#syntax_3","title":"Syntax","text":"<pre><code>Value := Vmr.GetParameterString(ParamName)\n</code></pre>"},{"location":"api-reference/voicemeeter/#parameters_2","title":"Parameters","text":"<code>ParamName</code>: String <p>The name of the parameter.</p>"},{"location":"api-reference/voicemeeter/#returns-string_1","title":"Returns: String","text":"<p>The value of the parameter.</p>"},{"location":"api-reference/voicemeeter/#getvoicemeetertype","title":"GetVoicemeeterType","text":"<p>Get the Voicemeeter type.</p>"},{"location":"api-reference/voicemeeter/#syntax_4","title":"Syntax","text":"<pre><code>VoicemeeterType := Vmr.GetVoicemeeterType()\n</code></pre>"},{"location":"api-reference/voicemeeter/#returns-integer","title":"Returns: Integer","text":"<p>An integer representing the type of Voicemeeter.</p>"},{"location":"api-reference/voicemeeter/#getvoicemeeterversion","title":"GetVoicemeeterVersion","text":"<p>Get the Voicemeeter version.</p>"},{"location":"api-reference/voicemeeter/#syntax_5","title":"Syntax","text":"<pre><code>Version := Vmr.GetVoicemeeterVersion()\n</code></pre>"},{"location":"api-reference/voicemeeter/#returns-integer_1","title":"Returns: Integer","text":"<p>An integer representing the Voicemeeter version.</p>"},{"location":"api-reference/voicemeeter/#hidevoicemeeterwindow","title":"HideVoicemeeterWindow","text":"<p>Hide the Voicemeeter window.</p>"},{"location":"api-reference/voicemeeter/#syntax_6","title":"Syntax","text":"<pre><code>Vmr.HideVoicemeeterWindow()\n</code></pre>"},{"location":"api-reference/voicemeeter/#isparametersdirty","title":"IsParametersDirty","text":"<p>Check if parameters have changed. Call this function periodically (typically every 10 or 20ms).</p>"},{"location":"api-reference/voicemeeter/#syntax_7","title":"Syntax","text":"<pre><code>ParametersChanged := Vmr.IsParametersDirty()\n</code></pre>"},{"location":"api-reference/voicemeeter/#returns-integer_2","title":"Returns: Integer","text":"<p>1 (true) if parameters have changed, otherwise 0 (false).</p>"},{"location":"api-reference/voicemeeter/#setparameterfloat","title":"SetParameterFloat","text":"<p>Set a floating point parameter value.</p>"},{"location":"api-reference/voicemeeter/#syntax_8","title":"Syntax","text":"<pre><code>Vmr.SetParameterFloat(ParamName, Value)\n</code></pre>"},{"location":"api-reference/voicemeeter/#parameters_3","title":"Parameters","text":"<code>ParamName</code>: String <p>The name of the parameter.</p> <code>Value</code>: Float <p>The value to assign to the parameter.</p>"},{"location":"api-reference/voicemeeter/#setparameterstring","title":"SetParameterString","text":"<p>Set a string parameter value.</p>"},{"location":"api-reference/voicemeeter/#syntax_9","title":"Syntax","text":"<pre><code>Vmr.SetParameterString()\n</code></pre>"},{"location":"api-reference/voicemeeter/#parameters_4","title":"Parameters","text":"<code>ParamName</code>: String <p>The name of the parameter.</p> <code>Value</code>: String <p>The value to assign to the parameter.</p>"},{"location":"api-reference/voicemeeter/#setparameters","title":"SetParameters","text":"<p>Set one or several parameters by a script.</p>"},{"location":"api-reference/voicemeeter/#syntax_10","title":"Syntax","text":"<pre><code>Vmr.SetParameters()\n</code></pre>"},{"location":"api-reference/voicemeeter/#parameters_5","title":"Parameters","text":"<code>Params</code>: String <p>A string containing the script.</p>"},{"location":"api-reference/voicemeeter/#showvoicemeeterwindow","title":"ShowVoicemeeterWindow","text":"<p>Show and activate the Voicemeeter window.</p>"},{"location":"api-reference/voicemeeter/#syntax_11","title":"Syntax","text":"<pre><code>Vmr.ShowVoicemeeterWindow()\n</code></pre>"},{"location":"api-reference/voicemeeter/#togglevoicemeeterwindow","title":"ToggleVoicemeeterWindow","text":"<p>Toggles the Voicemeeter window between shown and hidden. If the window is hidden or inactive, shows and activates the window, otherwise hides the window.</p>"},{"location":"api-reference/voicemeeter/#syntax_12","title":"Syntax","text":"<pre><code>Vmr.ToggleVoicemeeterWindow()\n</code></pre>"},{"location":"api-reference/voicemeeter/device-type/","title":"Voicemeeter.DeviceType","text":"<p>An enum representing an audio device type.</p>"},{"location":"api-reference/voicemeeter/device-type/#inheritance-voicemeeterenum-voicemeeterdevicetype","title":"Inheritance: Voicemeeter.Enum  Voicemeeter.DeviceType","text":""},{"location":"api-reference/voicemeeter/device-type/#fields","title":"Fields","text":"Name Value MME <code>1</code> WDM <code>3</code> KS <code>4</code> ASIO <code>5</code>"},{"location":"api-reference/voicemeeter/enum/","title":"Voicemeeter.Enum","text":"<p>A class containing helper methods for integral enumerations used by the Voicemeeter Remote SDK.</p>"},{"location":"api-reference/voicemeeter/enum/#static-methods","title":"Static Methods","text":""},{"location":"api-reference/voicemeeter/enum/#isdefined","title":"IsDefined","text":"<p>Determines whether a given integral value, or its name as a string, exists in the enumeration.</p>"},{"location":"api-reference/voicemeeter/enum/#syntax","title":"Syntax","text":"<pre><code>IsDefined := SomeEnum.IsDefined(Value)\n</code></pre>"},{"location":"api-reference/voicemeeter/enum/#parameters","title":"Parameters","text":"<code>Value</code>: Integer | String <p>The value or name of a constant in the enumeration.</p>"},{"location":"api-reference/voicemeeter/enum/#returns-integer","title":"Returns: Integer","text":"<p>1 (true) if <code>Value</code> is defined in the enumeration, otherwise 0 (false).</p>"},{"location":"api-reference/voicemeeter/enum/#__enum","title":"__Enum","text":"<p>Enumerates values of the enumeration. This method is typically not called directly. Instead, the enumeration is passed directly to a for-loop.</p>"},{"location":"api-reference/voicemeeter/enum/#syntax_1","title":"Syntax","text":"<pre><code>for Value in SomeEnum\n</code></pre> <pre><code>for Name, Value in SomeEnum\n</code></pre>"},{"location":"api-reference/voicemeeter/enum/#parameters_1","title":"Parameters","text":"<code>NumberOfVars</code>: Integer <p>The number of variables passed to the calling for-loop.</p>"},{"location":"api-reference/voicemeeter/enum/#returns-enumerator","title":"Returns: Enumerator","text":"<p>A new enumerator.</p>"},{"location":"api-reference/voicemeeter/remote-error/","title":"Voicemeeter.RemoteError","text":"<p>An error from the Voicemeeter Remote library.</p>"},{"location":"api-reference/voicemeeter/remote-error/#inheritance-error-voicemeeterremoteerror","title":"Inheritance: Error  Voicemeeter.RemoteError","text":""},{"location":"api-reference/voicemeeter/remote-error/#properties","title":"Properties","text":""},{"location":"api-reference/voicemeeter/remote-error/#code","title":"Code","text":"<p>The error response code provided by the Voicemeeter Remote library.</p>"},{"location":"api-reference/voicemeeter/remote-error/#type-integer","title":"Type: Integer","text":""},{"location":"api-reference/voicemeeter/type/","title":"Voicemeeter.Type","text":"<p>An enum representing a Voicemeeter application type.</p>"},{"location":"api-reference/voicemeeter/type/#inheritance-voicemeeterenum-voicemeeterdevicetype","title":"Inheritance: Voicemeeter.Enum  Voicemeeter.DeviceType","text":""},{"location":"api-reference/voicemeeter/type/#fields","title":"Fields","text":"Name Value Voicemeeter <code>1</code> VoicemeeterBanana <code>2</code> VoicemeeterPotato <code>3</code> Voicemeeter64 <code>4</code> VoicemeeterBanana64 <code>5</code> VoicemeeterPotato64 <code>6</code> VbDeviceCheck <code>10</code> VoicemeeterMacroButtons <code>11</code> VoicemeeterStreamerView <code>12</code> VoicemeeterBusMatrix8 <code>13</code> VoicemeeterBusGeq15 <code>14</code> Vban2Midi <code>15</code> VbCableControlPanel <code>20</code> VbAuxControlPanel <code>21</code> VbVaio3ControlPanel <code>22</code> VbVaioControlPanel <code>23</code>"}]}